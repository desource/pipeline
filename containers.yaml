groups:
- name: common
  jobs:
  - haproxy
  - nginx
  - skydns
- name: elk
  jobs:
  - java
  - elasticsearch
  - nodejs
  - kibana
  - heka
- name: build
  jobs:
  - concourse
  - alpine-build
  - fedora-build

jobs:
- name: haproxy
  plan:
  - do:
    - aggregate:
      - get: container
        resource: container-haproxy
        trigger: true
      - get: libressl-ci
        resource: libressl-src
        trigger: true
      - get: libslz-ci
        trigger: true
      - get: liblua-ci
        trigger: true
    - aggregate:
      - task: libressl
        file: libressl-ci/build.yaml
      - task: libslz
        file: libslz-ci/build.yaml
      - task: liblua
        file: liblua-ci/build.yaml
    - task: haproxy
      file: container/build.yaml
    - put: docker-haproxy
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: nginx
  plan:
  - do:
    - aggregate:
      - get: src
        resource: nginx-src
        trigger: true
      - get: libressl-src
        trigger: true
    - aggregate:
        - task: libressl
          file: libressl-src/build.yaml
    - task: nginx
      file: src/build.yaml
    - put: docker-nginx
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: java
  plan:
  - do:
    - aggregate:
      - get: glibc-src
        trigger: true
      - get: src
        resource: java-src
        trigger: true
    - task: glibc
      file: glibc-src/build.yaml
    - task: java
      file: src/build.yaml
    - put: docker-java
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: elasticsearch
  plan:
  - do:
    - aggregate:
        - get: src
          resource: elasticsearch-src
          trigger: true
        - get: docker-java
          passed: [java]
          trigger: true
    - task: elasticsearch
      file: src/build.yaml
    - put: docker-elasticsearch
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: nodejs
  plan:
  - do:
    - get: src
      resource: nodejs-src
      trigger: true
    - task: nodejs
      file: src/build.yaml
    - put: docker-nodejs
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: kibana
  plan:
  - do:
    - aggregate:
      - get: docker-nodejs
        passed: [nodejs]
        trigger: true
      - get: src
        resource: kibana-src
        trigger: true
    - task: kibana
      file: src/build.yaml
    - put: docker-kibana
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: heka
  plan:
  - do:
    - aggregate:
      - get: src
        resource: heka-git
        trigger: true
      - get: heka-container-src
        trigger: true
    - task: heka
      file: heka-container-src/build.yaml
    - put: docker-heka
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        icon_emoji: ":concourse:"

- name: skydns
  plan:
  - do:
    - aggregate:
      - get: skydns-git
      - get: skydns-container-src
        trigger: true
    - task: skydns
      file: skydns-container-src/build.yaml
    - put: docker-skydns
      params:
        build: skydns-build
    on_failure:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":monkey_face: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: concourse
  plan:
  - do:
    - aggregate:
      - get: container
        resource: container-concourse
        trigger: true
      - get: glibc-src
        trigger: true
    - task: glibc
      file: glibc-src/build.yaml
    - task: concourse
      file: container/build.yaml
    - put: docker-concourse
      params:
        build: out
        tag: out/tag
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"


- name: alpine-build
  serial: true
  plan:
  - get: pipeline
  - put: docker-alpine-build
    params:
      build: pipeline/build/alpine

- name: fedora-build
  serial: true
  plan:
  - get: pipeline
  - put: docker-fedora-build
    params:
      build: pipeline/build/fedora

resources:
- name: pipeline
  type: git
  source:
    uri: https://github.com/desource/pipeline.git

- name: slack
  type: slack-notification
  source:
    url: {{slack-notifications-url}}

- name: libressl-src
  type: git
  source:
    uri: https://github.com/desource/libressl.git
    
- name: libslz-ci
  type: git
  source:
    uri: https://github.com/desource/libslz.git
    
- name: liblua-ci
  type: git
  source:
    uri: https://github.com/desource/liblua.git
    
- name: glibc-src
  type: git
  source:
    uri: https://github.com/desource/glibc.git

- name: container-haproxy
  type: git
  source:
    uri: https://github.com/desource/container-haproxy.git

- name: docker-haproxy
  type: docker-image
  source:
    repository: quay.io/desource/haproxy
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: nginx-src
  type: git
  source:
    uri: https://github.com/desource/container-nginx.git

- name: java-src
  type: git
  source:
    uri: https://github.com/desource/container-java.git

- name: elasticsearch-src
  type: git
  source:
    uri: https://github.com/desource/container-elasticsearch.git

- name: nodejs-src
  type: git
  source:
    uri: https://github.com/desource/container-nodejs.git

- name: kibana-src
  type: git
  source:
    uri: https://github.com/desource/container-kibana.git

- name: heka-git
  type: git
  source:
    uri: git@github.com:markuskobler/heka.git
    private_key: {{github-private-key}}
    branch: dev

- name: heka-container-src
  type: git
  source:
    uri: https://github.com/desource/container-heka.git

- name: skydns-git
  type: git
  source:
    uri: https://github.com/skynetservices/skydns.git
    branch: 2.5.3a

- name: skydns-container-src
  type: git
  source:
    uri: https://github.com/desource/container-skydns.git
    tag: next


- name: container-concourse
  type: git
  source:
    uri: https://github.com/desource/container-concourse.git

- name: docker-nginx
  type: docker-image
  source:
    repository: quay.io/desource/nginx
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-java
  type: docker-image
  source:
    repository: quay.io/desource/java
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-elasticsearch
  type: docker-image
  source:
    repository: quay.io/desource/elasticsearch
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-nodejs
  type: docker-image
  source:
    repository: quay.io/desource/nodejs
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-kibana
  type: docker-image
  source:
    repository: quay.io/desource/kibana
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-skydns
  type: docker-image
  source:
    repository: quay.io/desource/skydns
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-heka
  type: docker-image
  source:
    repository: quay.io/desource/heka
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-concourse
  type: docker-image
  source:
    repository: quay.io/desource/concourse
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-alpine-build
  type: docker-image
  source:
    repository: quay.io/desource/alpine
    username: {{quay-io-username}}
    password: {{quay-io-password}}
    tag: build

- name: docker-fedora-build
  type: docker-image
  source:
    repository: quay.io/desource/fedora
    username: {{quay-io-username}}
    password: {{quay-io-password}}
    tag: build

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
