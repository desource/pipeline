groups:
- name: common
  jobs:
  - haproxy
  - nginx
  - skydns
- name: elk
  jobs:
  - java
  - elasticsearch
  - nodejs
  - kibana
- name: heka
  jobs:
  - heka

jobs:
- name: haproxy
  plan:
  - do:
    - aggregate:
      - get: container
        resource: haproxy-container
      - get: libressl-ci
      - get: libslz-ci
      - get: liblua-ci
    - aggregate:
      - task: libressl
        file: libressl-ci/build.yaml
      - task: libslz
        file: libslz-ci/build.yaml
      - task: liblua
        file: liblua-ci/build.yaml
    - task: haproxy
      file: container/build.yaml
    - put: haproxy-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: nginx
  plan:
  - do:
    - aggregate:
      - get: container
        resource: nginx-container
      - get: libressl-ci
    - aggregate:
        - task: libressl
          file: libressl-ci/build.yaml
    - task: nginx
      file: container/build.yaml
    - put: nginx-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: skydns
  plan:
  - do:
    - aggregate:
      - get: src
        resource: skydns-git
      - get: container
        resource: skydns-container
    - task: skydns
      file: container/build.yaml
    - put: skydns-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":monkey_face: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
        
- name: java
  plan:
  - do:
    - aggregate:
      - get: glibc-ci
      - get: container
        resource: java-container
    - task: glibc
      file: glibc-ci/build.yaml
    - task: java
      file: container/build.yaml
    - put: java-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: elasticsearch
  plan:
  - do:
    - aggregate:
        - get: java-docker
          passed: [java]
        - get: container
          resource: elasticsearch-container
    - task: elasticsearch
      file: container/build.yaml
    - put: elasticsearch-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: nodejs
  plan:
  - do:
    - get: container
      resource: nodejs-container
    - task: nodejs
      file: container/build.yaml
    - put: nodejs-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: kibana
  plan:
  - do:
    - aggregate:
      - get: nodejs-docker
        passed: [nodejs]
      - get: container
        resource: kibana-container
    - task: kibana
      file: container/build.yaml
    - put: kibana-docker
      params:
        build: out
        tag: out/version
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"

- name: heka
  plan:
  - do:
    - aggregate:
      - get: src
        resource: heka-git
      - get: heka-container-src
    - task: heka
      file: heka-container-src/build.yaml
    - put: docker-heka
      params:
        build: out
    on_failure:
      put: slack
      params:
        text: ":boom: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        always_notify: true
        icon_emoji: ":concourse:"
    on_success:
      put: slack
      params:
        text: ":speak_no_evil: https://ci.desource.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
        channel: "#general"
        username: concourse
        icon_emoji: ":concourse:"

resources:
- name: pipeline
  type: git
  source:
    uri: https://github.com/desource/pipeline.git

- name: slack
  type: slack-notification
  source:
    url: {{slack-notifications-url}}

- name: libressl-ci
  type: git
  source:
    uri: https://github.com/desource/libressl.git
    
- name: libslz-ci
  type: git
  source:
    uri: https://github.com/desource/libslz.git
    
- name: liblua-ci
  type: git
  source:
    uri: https://github.com/desource/liblua.git
    
- name: glibc-ci
  type: git
  source:
    uri: https://github.com/desource/glibc.git

- name: haproxy-container
  type: git
  source:
    uri: https://github.com/desource/haproxy-container.git

- name: haproxy-docker
  type: docker-image
  source:
    repository: quay.io/desource/haproxy
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: nginx-container
  type: git
  source:
    uri: https://github.com/desource/nginx-container.git

- name: nginx-docker
  type: docker-image
  source:
    repository: quay.io/desource/nginx
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: skydns-git
  type: git
  source:
    uri: https://github.com/skynetservices/skydns.git
    branch: 2.5.3a

- name: skydns-container
  type: git
  source:
    uri: https://github.com/desource/skydns-container.git

- name: java-container
  type: git
  source:
    uri: https://github.com/desource/java-container.git

- name: java-docker
  type: docker-image
  source:
    repository: quay.io/desource/java
    username: {{quay-io-username}}
    password: {{quay-io-password}}
    
- name: elasticsearch-container
  type: git
  source:
    uri: https://github.com/desource/elasticsearch-container.git

- name: nodejs-container
  type: git
  source:
    uri: https://github.com/desource/nodejs-container.git

- name: kibana-container
  type: git
  source:
    uri: https://github.com/desource/kibana-container.git

- name: heka-git
  type: git
  source:
    uri: git@github.com:markuskobler/heka.git
    private_key: {{github-private-key}}
    branch: dev

- name: heka-container-src
  type: git
  source:
    uri: https://github.com/desource/container-heka.git

- name: elasticsearch-docker
  type: docker-image
  source:
    repository: quay.io/desource/elasticsearch
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: nodejs-docker
  type: docker-image
  source:
    repository: quay.io/desource/nodejs
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: kibana-docker
  type: docker-image
  source:
    repository: quay.io/desource/kibana
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: skydns-docker
  type: docker-image
  source:
    repository: quay.io/desource/skydns
    username: {{quay-io-username}}
    password: {{quay-io-password}}

- name: docker-heka
  type: docker-image
  source:
    repository: quay.io/desource/heka
    username: {{quay-io-username}}
    password: {{quay-io-password}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
